/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 3 GRAVE    &kp Q  &kp W  &kp E     &kp R         &lt 4 T               &kp Y        &kp U            &kp I      &kp O    &kp P       &kp BSLH
&mt LCTRL TAB  &kp A  &kp S  &kp D     &lt 3 F       &kp G                 &kp H        &kp J            &kp K      &kp L    &lt 3 SEMI  &kp SQT
&kp LSHFT      &kp Z  &kp X  &kp C     &kp V         &kp B                 &kp N        &kp M            &kp COMMA  &kp DOT  &kp FSLH    &mt LSHFT BSPC
                             &kp LGUI  &lt 3 ESCAPE  &mt LEFT_GUI SPACE    &lt 4 SPACE  &mt RCTRL ENTER  &kp RALT
            >;
        };

        lower_layer {
            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans  &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&kp ESC   &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &kp PG_UP   &kp UP            &kp PAGE_DOWN               &kp MINUS  &kp EQUAL  &kp BSPC
&kp TAB   &kp C_VOL_DN  &kp C_VOLUME_UP  &kp F         &kp LSHFT     &kp LEFT_SHIFT    &kp LEFT    &kp UP            &kp DOWN                    &kp RIGHT  &kp LBKT   &kp RBKT
&kp CAPS  &kp K_UNDO    &kp K_CUT        &kp K_COPY    &kp K_PASTE   &kp SPACE         &kp LEFT    &kp UP            &kp DOWN                    &kp RIGHT  &tog 3     &kp DEL
                                         &kp LCTRL     &kp LALT      &kp LGUI          &kp ESCAPE  &mt RCTRL C_MUTE  &mt RIGHT_ALT C_PLAY_PAUSE
            >;
        };

        layer_4 {
            bindings = <
&kp ESC   &kp N1      &kp N2     &kp N3      &kp N4          &kp N5               &kp N6    &kp N7               &kp N8        &kp N9           &kp N0      &kp DELETE
&kp TAB   &kp F1      &kp F2     &kp F3      &kp F4          &kp F5               &kp F6    &kp F7               &kp F8        &kp F9           &kp F10     &kp F11
&kp CAPS  &kp K_UNDO  &kp K_CUT  &kp K_COPY  &kp K_PASTE     &kp K_APPLICATION    &tog 5    &kp C_PLAY_PAUSE     &kp C_VOL_DN  &kp C_VOLUME_UP  &kp C_MUTE  &kp F12
                                 &kp LCTRL   &kp LEFT_SHIFT  &kp SPACE            &kp RALT  &mt RIGHT_GUI ENTER  &tog 4
            >;
        };

        layer_5 {
            bindings = <
&trans             &trans            &trans        &trans        &bootloader   &sys_reset      &to 0   &trans  &trans  &trans  &trans  &trans
&bt BT_CLR         &bt BT_SEL 0      &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&ext_power EP_OFF  &ext_power EP_ON  &out OUT_BLE  &out OUT_USB  &trans        &trans          &tog 5  &trans  &trans  &trans  &trans  &trans
                                                   &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };
    };
};

